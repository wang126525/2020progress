{"code":"var Promise = /** @class */ (function () {\r\n    function Promise(executor) {\r\n        var _this = this;\r\n        this.status = \"pending\" /* PENDING */;\r\n        this.resolveValue = undefined;\r\n        this.rejectValue = undefined;\r\n        this.resolveFnList = [];\r\n        this.rejectFnList = [];\r\n        var resolve = function (resolveValue) {\r\n            if (_this.status == \"pending\" /* PENDING */) {\r\n                _this.status = \"resolved\" /* RESOLVED */;\r\n                _this.resolveValue = resolveValue;\r\n                _this.resolveFnList.forEach(function (fn) { return fn(); });\r\n            }\r\n        };\r\n        var reject = function (rejectValue) {\r\n            if (_this.status == \"pending\" /* PENDING */) {\r\n                _this.status = \"rejected\" /* REJECTED */;\r\n                _this.rejectValue = rejectValue;\r\n                _this.rejectFnList.forEach(function (fn) { return fn(); });\r\n            }\r\n        };\r\n        executor(resolve, reject);\r\n    }\r\n    Promise.prototype.then = function (onResolveFn, onRejectFn) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (_this.status == \"pending\" /* PENDING */) {\r\n                _this.resolveFnList.push(function () {\r\n                    onResolveFn(_this.resolveValue);\r\n                });\r\n                _this.rejectFnList.push(function () {\r\n                    onRejectFn(_this.rejectValue);\r\n                });\r\n            }\r\n            if (_this.status == \"resolved\" /* RESOLVED */) {\r\n                var y = onResolveFn(_this.resolveValue);\r\n                resolve(y);\r\n            }\r\n            if (_this.status == \"rejected\" /* REJECTED */) {\r\n                var r = onRejectFn(_this.rejectValue);\r\n                reject(r);\r\n            }\r\n        });\r\n        return promise;\r\n    };\r\n    return Promise;\r\n}());\r\nexport default Promise;\r\n","references":[]}
